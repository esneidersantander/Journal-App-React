{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducers.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","noteToFireStore","url","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","html","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","removeError","startLoading","finishLoading","login","displayName","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","msgError","email","password","isFormValid","validator","isEmail","length","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","message","startLoginEmailPassword","disabled","signInWithPopup","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","console","log","startRegisterWithEmailPasswordName","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aa438f9a.chunk.js","sourcesContent":[" import firebase from 'firebase/app';\r\n import 'firebase/firestore';\r\n import 'firebase/auth';\r\n \r\n // Your web app's Firebase configuration\r\n const firebaseConfig = {\r\n    apiKey: \"AIzaSyAHBMQaVFyAOPDVxHPlUSBlVYecrlxf2PY\",\r\n    authDomain: \"journal-app-curso-react-28a73.firebaseapp.com\",\r\n    projectId: \"journal-app-curso-react-28a73\",\r\n    storageBucket: \"journal-app-curso-react-28a73.appspot.com\",\r\n    messagingSenderId: \"140122129305\",\r\n    appId: \"1:140122129305:web:8f21c5a9f2543fc1928908\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider =  new firebase.auth.GoogleAuthProvider();\r\n\r\n  export{\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }","export const fileUpload = async(file)=>{\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/esneidersantander/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal')\r\n    formData.append('file', file);\r\n    try {\r\n        const resp = await fetch (cloudUrl, {\r\n            method:'POST',\r\n            body:formData\r\n        })\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes=  async (uid)=>{\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes =[];\r\n    notesSnap.forEach(snapHijo=>{\r\n        notes.push({\r\n            id:snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n    return notes;\r\n}","export const types ={\r\n    login : '[Auth] Login',\r\n    logout : '[Auth] Logout',\r\n\r\n\r\n    uiSetError:'[UI] Set Error',\r\n    uiRemoveError:'[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew:'[Notes] New note',\r\n    notesActive:'[Notes] Set Active note',\r\n    notesLoad:'[Notes] Load notes',\r\n    notesUpdated:'[Notes] Update note saved',\r\n    notesDelete:'[Notes] Delete note',\r\n    notesLogoutCleaning:'[Notes] Logout Cleaning',\r\n}","import Swal from 'sweetalert2'\r\nimport {db} from '../firebase/firebase-config';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\nexport const startNewNote=()=>{\r\n    return async (dispatch, getState)=>{\r\n        const {uid} = getState().auth;\r\n        const newNote ={\r\n            title:'',\r\n            body:'',\r\n            date:new Date().getTime()\r\n        }\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        dispatch(activeNote(doc.id, newNote))\r\n        dispatch(addNewNote(doc.id, newNote))\r\n    }\r\n\r\n}\r\n\r\nexport const activeNote=(id, note)=>({\r\n    type:types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\n\r\nexport const addNewNote=(id, note)=>({\r\n    type:types.notesAddNew,\r\n    payload:{\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes=  (uid)=>{\r\n    return async(dispatch)=>{\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes=(notes)=>({\r\n    type: types.notesLoad,\r\n    payload:notes\r\n})\r\n\r\nexport const startSaveNote= (note)=>{\r\n    return async (dispatch,getState)=>{\r\n        const uid = getState().auth.uid;\r\n        const noteToFireStore = {...note};\r\n        delete noteToFireStore.id;\r\n        if (!note.url) {\r\n            delete noteToFireStore.url;\r\n        }\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFireStore);\r\n    \r\n        dispatch(refreshNote(note.id, note));\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote =(id, note)=>({\r\n    type:types.notesUpdated,\r\n    payload:{\r\n        id,\r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const startUploading = (file)=>{\r\n    return async(dispatch, getState) => {\r\n        const {active:activeNote} = getState().notes;\r\n        \r\n            Swal.fire({\r\n                title: 'Uploading...',\r\n                html: 'Please wait...',\r\n                didOpen: () => {\r\n                Swal.showLoading()\r\n                }\r\n            })\r\n            const fileUrl = await fileUpload(file);\r\n            activeNote.url = fileUrl\r\n            dispatch(startSaveNote(activeNote));\r\n            Swal.close();\r\n    }\r\n}\r\n\r\n\r\nexport const startDeleting = (id)=>{\r\n    return async (dispatch, getState)=>{\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n    \r\n        dispatch (deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote=(id)=>({\r\n    type:types.notesDelete,\r\n    payload:id\r\n})\r\n\r\n\r\nexport const noteLogout = ()=>({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newState=initialState) => {\r\n        setValues( newState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch()\r\n    const {active} = useSelector(state => state.notes)\r\n    \r\n    const handleSave =()=>{\r\n        dispatch(startSaveNote(active));\r\n    }\r\n    const handlePictureUpload =()=>{\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n    const handleFileChange =(e)=>{\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto de 2020</span>\r\n            <input \r\n                id=\"fileSelector\"\r\n                style={{display:'none'}}\r\n                type=\"file\"\r\n                name=\"file\"\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureUpload}\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const [formValues, handleInputChange, reset]=useForm(note);\r\n    \r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n         if(note.id !== activeId.current){\r\n             reset (note);\r\n             activeId.current= note.id;\r\n         }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, {...formValues}))\r\n    }, [formValues, dispatch])\r\n\r\n    const {body, title,id} = formValues;\r\n    const handleDelete = ()=>{\r\n        dispatch(startDeleting(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar/>\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    />\r\n                <textarea \r\n                    placeholder=\"What hapenned today?\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n                {\r\n                    (note.url)\r\n                    &&\r\n                    (<div >\r\n                        <img \r\n                            className=\"notes__image\"\r\n                            src={note.url}\r\n                            alt=\"un arbolito\"\r\n                        />\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError=(err)=>({\r\n    type:types.uiSetError,\r\n    payload:err\r\n});\r\n\r\nexport const removeError =() =>({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading =()=>({\r\n    type: types.uiStartLoading\r\n})\r\nexport const finishLoading  =()=>({\r\n    type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2'\r\nimport {types} from '../types/types';\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config'\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword =(email, password)=>{\r\n    return (dispatch)=>{\r\n        dispatch (startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user})=>{\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n            }).catch(e=>{\r\n                dispatch(finishLoading())\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin=()=>{\r\n    return(dispatch)=>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user})=>{\r\n                dispatch (login (user.uid, user.displayName))\r\n            });\r\n    }   \r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName =(email,password, name)=>{\r\n    return (dispatch)=>{\r\n        dispatch (startLoading());\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n            .then(async({user})=>{\r\n                await user.updateProfile({displayName:name});\r\n                console.log(user, );\r\n                dispatch (login (user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n            }).catch(e=>{\r\n                Swal.fire('Error', e.message, 'error')\r\n                dispatch(finishLoading())\r\n            });\r\n    }\r\n}\r\n\r\nexport const login=(uid, displayName)=>({\r\n    type: types.login,\r\n    payload:{\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\n\r\nexport const startLogout= ()=>{\r\n    return async (dispatch)=>{\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\n\r\nexport const logout =()=>({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport moment from 'moment'\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    const dispatch = useDispatch()\r\n    const noteDate = moment(date);\r\n    const handleEntryClick=()=>{\r\n        dispatch(activeNote(id, {\r\n            date, title, body, url\r\n        }))\r\n    }\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        > \r\n            {\r\n                url&&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize:'cover',\r\n                        backgroundImage:`url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\"> \r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\"> \r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    const {notes} = useSelector(state => state.notes)\r\n    return (\r\n        <div className=\"journal__entries animate__animated animate__fadeIn animate__faster\">\r\n            {\r\n                notes.map(note=>(\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth)\r\n    const handleLogout=()=>{\r\n        dispatch(startLogout());\r\n    }\r\n    const handleAddNew=()=>{\r\n        dispatch(startNewNote());\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries/>\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n           \r\n\r\n            <Sidebar/>\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen/>)\r\n                        : (<NothingSelected/>)\r\n\r\n                }\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui)\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n\r\n    const [formValues, handleInputChange]= useForm({\r\n        email:'esneider@esneider.com',\r\n        password:'123456'\r\n    });\r\n\r\n    const{email, password}=formValues;\r\n\r\n    const handleLogin=(e)=>{\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch(startLoginEmailPassword(email, password));\r\n        }\r\n    }\r\n    const handleGoogleLogin=()=>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n\r\n    const isFormValid=()=>{\r\n        if (!validator.isEmail(email)){\r\n            dispatch(setError('Email is not valid'));\r\n            return false\r\n        }else if( password.length < 5){\r\n            dispatch(setError('Password must be at least 6 characters and match'));\r\n            return false\r\n        }\r\n        \r\n        dispatch(removeError());        \r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn animate__faster\">\r\n            <h3 className=\"auth__title\">Login</h3>   \r\n            <form \r\n                onSubmit={handleLogin}\r\n            >\r\n                {\r\n                    msgError&&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button \r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n                <hr/>\r\n                <div className=\"auth__social-network\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/register\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n                \r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport {startRegisterWithEmailPasswordName} from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state => state.ui)\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name:'esneider',\r\n        email:'esneider@esneider.com',\r\n        password:'123456',\r\n        password2:'123456'\r\n    });\r\n\r\n\r\n    const{name, email, password, password2}=formValues;\r\n\r\n    const handleRegister=(e)=>{\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch (startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    const isFormValid=()=>{\r\n        if (name.trim().length === 0){\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        }else if (!validator.isEmail(email)){\r\n            dispatch(setError('Email is not valid'));\r\n            return false\r\n        }else if(password !== password2 || password.length < 5){\r\n            dispatch(setError('Password must be at least 6 characters and match'));\r\n            return false\r\n        }\r\n        \r\n        dispatch(removeError());        \r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn animate__faster\">\r\n            <h3 className=\"auth__title\">Register</h3>   \r\n            <form onSubmit={handleRegister}>\r\n                {\r\n                    msgError&&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button \r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                    disabled={ loading }\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/login\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n                \r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        \r\n        <div className=\"auth__main \">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path=\"/auth/login\" component={LoginScreen}/>\r\n                    <Route path=\"/auth/register\" component={RegisterScreen}/>\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>    \r\n            </div>\r\n        </div>   \r\n    \r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n                (isAuthenticated)\r\n                    ? <Component {...props}/>\r\n                    : (<Redirect to=\"/auth/login\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest    \r\n} ) => {\r\n\r\n \r\n    return (\r\n        <Route {...rest}\r\n            component= {(props)=>(\r\n                (!isAuthenticated)\r\n                    ? <Component {...props}/>\r\n                    : (<Redirect to=\"/\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\nPublicRoute.propTypes={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async (user)=>{\r\n            if (user?.uid) {\r\n                dispatch(login (user.uid, user.displayName))\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsLoggedIn(false)\r\n            }\r\n            setChecking(false);\r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n    \r\n    if (checking) {\r\n        return(\r\n            <h1>Please wait...</h1>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\" \r\n                        component={AuthRouter}\r\n                    />\r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\" \r\n                        component={JournalScreen} \r\n                    />\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    notes:[],\r\n    active:null\r\n}\r\n//react-journal\r\n\r\nexport const notesReducer = (state=initialState, action)=>{\r\n\r\n\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes:[action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes:[...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return{\r\n                ...state,\r\n                notes:state.notes.map(\r\n                    note=>note.id===action.payload.id \r\n                        ?action.payload.note \r\n                        :note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active:null,\r\n                notes: state.notes.filter(note=>note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active:null,\r\n                notes:[]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    loading:false,\r\n    msgError:null\r\n}\r\n\r\nexport const uiReducer =(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError:action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError:null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading:false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n//se utiliza esta constante para combinar los reducers ya que la funcion de createStore \r\n//solo permite enviar un reducer\r\n//combineReducers y createStore son funciones de redux que se instala con npm\r\n\r\n//para usar el store se importa el provider en el punto mas alto de la aplicacion\r\n//y se envia como paremetro el store que es el que va a contener la informacion \r\n\r\n//el rpovider se importa de react-redux que tambien se instala con npm\r\nconst reducers =combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n        reducers,\r\n        composeEnhancers(\r\n            applyMiddleware(thunk)\r\n        )\r\n    );\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state={}, action)=>{\r\n\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}